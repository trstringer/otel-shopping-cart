name: CI
on:
  push:
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: make deps
      - name: E2e
        run: make e2e
  dependabot:
    runs-on: ubuntu-20.04
    if: contains(github.head_ref, 'dependabot')
    needs: ci
    steps:
      - name: Approve a PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  cd:
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: ci
    permissions:
      permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: trstringer
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: make deps
      - name: Build images
        run: |
          make IMAGE_REPO_ROOT=ghcr.io/trstringer build-images
          make IMAGE_TAG=$(make version-with-commit) IMAGE_REPO_ROOT=ghcr.io/trstringer build-images
      - name: Push images
        run: |
          make IMAGE_REPO_ROOT=ghcr.io/trstringer push-images
          make IMAGE_TAG=$(make version-with-commit) IMAGE_REPO_ROOT=ghcr.io/trstringer push-images
      - name: Version
        run: echo "::set-output name=version::$(make version)"
        id: version
      - name: Release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body: New release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
